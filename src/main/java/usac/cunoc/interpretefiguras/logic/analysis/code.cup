package usac.cunoc.interpretefiguras.logic.analysis;

import java.util.ArrayList;
import java_cup.runtime.*;
import usac.cunoc.interpretefiguras.logic.objectAnalysis.Token;
import usac.cunoc.interpretefiguras.logic.reports.ReportErrorInterpreter;
import usac.cunoc.interpretefiguras.logic.reports.TypeIntreprete;


//////////////////////////

/**
     * ***STAR CODE*******
     */
    parser code {:
	public parser(Lexema lexer) {
        super(lexer);
    }

    private void printlnInter(String a){
         System.out.println(a);
    }

    private ArrayList<ReportErrorInterpreter> listError = new ArrayList();
  
    private void addError(){
        TypeIntreprete type = TypeIntreprete.LEXICON;
        System.out.println("\n"+" - Clase<"+"> en simbolo<" + sym.terminalNames[cur_token.sym]+String.format(">posicion: <%d>, <%d>", (cur_token.left+1), (cur_token.right+1)));
        Token toke = new Token((cur_token.left+1), (cur_token.right+1), sym.terminalNames[cur_token.sym]);
        String description = ListErrorAnalyzer.LEXEMA_ONE.getDescription();
        this.listError.add(new ReportErrorInterpreter(type, toke, description));
    }
    public void syntax_error(Symbol cur_token) {
        addError();
    }
    public ArrayList<ReportErrorInterpreter> getListError() {
        return this.listError;
    }
    /**
     * ***END CODE*******
     */
:}
/*************************************TERMINALES******************************************************/

/*SIMBOLOS DE OPERACION*/
terminal SUMAR,RESTAR,DIVIDIR,MULTIPLICAR,REAL_NUMEBERS;
terminal ID,COMA;
/*AGRUPACION*/
terminal PARENTESIS_A,PARENTESIS_C;

/*COLOR*/
terminal BLUE,RED,YELLOW,GREEN,BLACK;
terminal CYAN,FUCHSIA,LAVENDER,MAROON;

/*TIPO DE GRAFICO*/
terminal CIRCLE,LINE,POLYGON,RECTANGLE,SQUARE;

/*OTRAS*/
terminal GRAFICAR,ANIMATION,LAST,OBJECT,CURVE;

/*************************************NO TERMINALES******************************************************/
nonterminal inicio;
nonterminal operacion;
/*para el uso de operaciones aritmeticas*/
nonterminal inico_opereacion;
nonterminal acciones,animtion;
nonterminal grafica,tipo_grafica,tipo_color,tipo_animation;
/*************************************PRECEDENCIA******************************************************/
precedence left SUMAR, RESTAR;
precedence left MULTIPLICAR, DIVIDIR;
/*************************************GRAMATICA******************************************************/
start with inicio;
/******operaciones matematicas*****/
inicio ::= acciones 
    |
    ;

acciones
    ::= acciones grafica
    |grafica
    ;

grafica
    ::=GRAFICAR tipo_grafica
    |animtion
    ;

tipo_grafica
    //  circulo (        <nombre>, <posx>,                  <posy>,              <radio>,                   <color>           )
    ::= CIRCLE PARENTESIS_A ID COMA inico_opereacion:px COMA inico_opereacion:py COMA inico_opereacion:r COMA tipo_color PARENTESIS_C
    //cuadrado (        <nombre>,           <posx>,               <posy>,              <tamaÃ±o lado>,    <color>      )
    |SQUARE PARENTESIS_A ID COMA inico_opereacion:px COMA inico_opereacion:py COMA inico_opereacion:l COMA tipo_color PARENTESIS_C
    //rectangulo (        <nombre>,              <posx>,                <posy>,             <ancho>,          <alto>,                   <color>      )
    |RECTANGLE PARENTESIS_A ID COMA inico_opereacion:px COMA inico_opereacion:py COMA inico_opereacion:w COMA inico_opereacion:h COMA tipo_color PARENTESIS_C
    //linea (         <nombre>,            <posx1>,               <posy1>,                 <posx2>,                 <posy2>,    <color>      )
    |LINE PARENTESIS_A ID COMA inico_opereacion:px COMA inico_opereacion:py COMA inico_opereacion:px2 COMA inico_opereacion:py2 COMA tipo_color PARENTESIS_C
    // poligono (        <nombre>,             <posx>,                 <posy>,        <cantidad lados>,              <ancho>,             <alto>,          <color>      )
    |POLYGON PARENTESIS_A ID COMA inico_opereacion:px COMA inico_opereacion:py COMA inico_opereacion:l COMA inico_opereacion:w COMA inico_opereacion:h COMA tipo_color PARENTESIS_C
    ;

animtion
    //  animar objeto anterior (        <tipoanimacion>,           <destinox>,              <destinoy>,             <orden>              )
    ::= ANIMATION OBJECT LAST PARENTESIS_A tipo_animation COMA inico_opereacion:dx COMA inico_opereacion:dy COMA inico_opereacion:o COMA PARENTESIS_C
    ;

tipo_animation
    ::= LINE
    |CURVE
    ;

tipo_color
    ::=
    BLUE
    |RED
    |YELLOW
    |GREEN
    |BLACK
    |CYAN
    |FUCHSIA
    |LAVENDER
    |MAROON
    ;
    
/******operaciones matematicas*****/
inico_opereacion ::= operacion:a 
    {:RESULT = a;:} /*A QUI ESTA EL TOTAL DE LA OPERACION*/
    ;

operacion ::= operacion:a SUMAR operacion:b 
|  operacion:a RESTAR operacion:b 
|  operacion:a DIVIDIR operacion:b 
|  operacion:a MULTIPLICAR operacion:b 
| PARENTESIS_A operacion:a PARENTESIS_C 
| REAL_NUMEBERS
;