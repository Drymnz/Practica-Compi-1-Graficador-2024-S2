/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package usac.cunoc.interpretefiguras.view;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import usac.cunoc.interpretefiguras.InterpreteFiguras;
import usac.cunoc.interpretefiguras.logic.analyzer.Analyzer;
import usac.cunoc.interpretefiguras.logic.fileManager.FileInput;
import usac.cunoc.interpretefiguras.logic.fileManager.FileOutput;

/**
 *
 * @author drymnz
 */
public class ViewsMenu extends javax.swing.JFrame {

    private File userFile;

    /**
     * Creates new form ViewsMenu
     */
    public ViewsMenu() {
        initComponents();
        this.setSize(InterpreteFiguras.HIGH, InterpreteFiguras.WIDTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        grapherPanel1 = new usac.cunoc.interpretefiguras.view.GrapherPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        reportPanel1 = new usac.cunoc.interpretefiguras.view.ReportPanel();
        compiler1 = new usac.cunoc.interpretefiguras.view.Compiler();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setBackground(new java.awt.Color(255, 153, 153));

        javax.swing.GroupLayout grapherPanel1Layout = new javax.swing.GroupLayout(grapherPanel1);
        grapherPanel1.setLayout(grapherPanel1Layout);
        grapherPanel1Layout.setHorizontalGroup(
            grapherPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
        );
        grapherPanel1Layout.setVerticalGroup(
            grapherPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(grapherPanel1);

        jScrollPane2.setBackground(new java.awt.Color(0, 204, 255));

        javax.swing.GroupLayout reportPanel1Layout = new javax.swing.GroupLayout(reportPanel1);
        reportPanel1.setLayout(reportPanel1Layout);
        reportPanel1Layout.setHorizontalGroup(
            reportPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 506, Short.MAX_VALUE)
        );
        reportPanel1Layout.setVerticalGroup(
            reportPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(reportPanel1);

        jButton1.setText("Copilar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cargar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Nuevo Archivo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Guardar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Animar");

        jButton6.setText("Exportar PDF");

        jButton7.setText("Exportar PNG");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(compiler1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton1)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(compiler1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(22, 22, 22))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Ejecutar el analisis
        if (this.compiler1.getTextArea().getText() != null) {
            Analyzer analyzer = new Analyzer(this.compiler1.getTextArea().getText());
            analyzer.Anilisar();
            if (analyzer.isErrorsAnalyzing()) {
                //ERROR 
            } else {
                //GRAFICAR 
                this.grapherPanel1.Graficar(analyzer.getParse().getLisGeometricObject());
                this.grapherPanel1.repaint();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Cargar archivo de texto
        this.verify();
        this.userFile = selectFile();
        if (this.userFile != null) {
            this.compiler1.getTextArea().setText(new FileInput().cargarArchivoTexto(userFile));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.saven();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.verify();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void verify() {
        if (userFile == null || this.compiler1.getTextArea().getText() != null) {
            //Hay un archivo en ejecucion
            String text = this.compiler1.getTextArea().getText().isBlank() ? "Tiene texto que puede perder" : "Hay modificaciones posibles para GUARDAR";
            int respuesta = JOptionPane.showConfirmDialog(null, text + "¿Desea Guardar el archivo?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {
                //Guardar
                this.saven();
            }
        }
        this.compiler1.getTextArea().setText("");
    }

    private void saven() {
        if (this.userFile == null) {
            this.userFile = selectFile();
        } else {
            if (new FileOutput().aguardarTexto(userFile, this.compiler1.getTextArea().getText())) {
                JOptionPane.showMessageDialog(null, "Se guardo con exito");
            } else {
                JOptionPane.showMessageDialog(null, "Error al guardar");
            }
        }
    }

    private File selectFile() {
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null); // Muestra el diálogo
        if (result == JFileChooser.APPROVE_OPTION) {
            // El usuario seleccionó un archivo
            return fileChooser.getSelectedFile();
        }
        return null;
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private usac.cunoc.interpretefiguras.view.Compiler compiler1;
    private usac.cunoc.interpretefiguras.view.GrapherPanel grapherPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private usac.cunoc.interpretefiguras.view.ReportPanel reportPanel1;
    // End of variables declaration//GEN-END:variables
}
